{
  "version": 3,
  "file": "[slug].aa3fe597.css",
  "sources": [
    "..\\..\\..\\..\\..\\..\\..\\src\\components\\Card.svelte",
    "..\\..\\..\\..\\..\\..\\..\\src\\components\\List.svelte",
    "..\\..\\..\\..\\..\\..\\..\\src\\components\\Board.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  export let title;\r\n  export let description = \"a card\";\r\n  export let tags = [\"tag\"];\r\n  export let list;\r\n</script>\r\n\r\n<div data-list={list}>\r\n  <header>{title}</header>\r\n  <p>{description}</p>\r\n  <footer>{tags}</footer>\r\n</div>\r\n\r\n<style>\r\n  header, p, footer{\r\n    padding: .1rem;\r\n    margin: 0;\r\n    width: 100%;\r\n  }\r\n  div{\r\n    flex: 0 1 auto;\r\n    width: 100%;\r\n    border: 1px solid #f1f1f1;\r\n    border-radius: var(--radius, 4px);\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: space-around;\r\n    justify-content: center;\r\n    background: white;\r\n    box-shadow: 0 2px 4px rgb(0,0,0,0.15);\r\n    margin-bottom: .25rem;\r\n  }\r\n</style>",
    "<script>\r\n  import Card from './Card.svelte';\r\n  export let name;\r\n  export let cards =[];\r\n  let newCard = \"\";\r\n  export let list;\r\n  function handleNewCard(e){\r\n    if(e.key == \"Enter\"){\r\n      cards = [...cards, {title: newCard, list: name}]\r\n      newCard = \"\";\r\n      isAdding = false;\r\n    }\r\n  }\r\n  let isAdding = false;\r\n</script>\r\n<section>\r\n  <header>\r\n    {name}\r\n  </header>\r\n<ol>\r\n  {#if cards.length > 0}\r\n    {#each cards as card, i}\r\n     <li><Card {...card} list={name}/></li>\r\n    {/each}\r\n  {:else}\r\n\t  <p>No cards! :(</p>\r\n\t{/if}\r\n</ol>\r\n<footer>\r\n  <label on:click={() => isAdding = true}>Add List\r\n    <input \r\n      hidden \r\n      class:isAdding \r\n      placeholder=\"enter card title\" \r\n      bind:value={newCard} \r\n      on:keydown={handleNewCard} \r\n    />\r\n  </label>\r\n</footer>\r\n</section>  \r\n\r\n<style>\r\n  input, button{\r\n    width: 200px;\r\n    background: #f1f1f1;\r\n    border: 1px solid #ccc;\r\n    border-radius: 4px;\r\n    padding: .25rem .5rem;\r\n    font-weight: bold;\r\n  }\r\n  section {\r\n    background: white;\r\n    min-width: 220px;\r\n    padding: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    border-radius: 4px;\r\n    border: 1px solid #ccc;\r\n    margin: .5rem;\r\n    box-shadow: 0 2px 4px rgb(0,0,0,0.1), 0 4px 8px -4px rgb(0,0,0,0.15);\r\n  }\r\n  ol {\r\n    flex: 0 1 auto;\r\n    height: 100%;\r\n    width: 200px;\r\n    background: #f1f1f1;\r\n    padding: .5rem;\r\n    margin: .25rem auto;\r\n    border: 1px solid #f1f1f1;\r\n  }\r\n  li {\r\n    list-style-type: none;\r\n    padding: 0;\r\n  }\r\n  header, footer {\r\n    min-width: 220px;\r\n    text-align: center;\r\n    padding: .5rem;\r\n    border-radius: 4px;\r\n  }\r\n  .isAdding {display: block}\r\n  *, *::after, *::before {box-sizing: border-box}\r\n</style>",
    "<script>\r\n  import List from './List.svelte';\r\n  export let lists = ['one', 'two', 'three'];\r\n  export let slug;\r\n  export let title;\r\n  let newListTitle = \"\";\r\n  function handleNewList(e){\r\n    if(e.key == \"Enter\"){\r\n      let newList = {\r\n        name: newListTitle\r\n      }\r\n      lists = [...lists, newList];\r\n      newListTitle = \"\";\r\n      isAdding = false;\r\n    }\r\n  }\r\n  let isAdding = false;\r\n</script>\r\n<header>{title}</header>\r\n<div>\r\n  {#each lists as list, i}\r\n    <List {...list} board={title} />\r\n  {/each}\r\n  <label on:click={() => isAdding = true}>Add List\r\n  <input hidden class:isAdding bind:value={newListTitle} on:keyup={handleNewList} />\r\n  </label>\r\n</div>\r\n<style>\r\n  div {\r\n    display: flex;\r\n    flex: 0 1 220px;\r\n    padding: .5rem 0;\r\n  }\r\n  header{\r\n    padding: .25rem;\r\n    background: #f1f1f1;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  input, label{\r\n    text-align: center;\r\n    height: 20px;\r\n    width: 200px;\r\n  }\r\n  .isAdding{ display: block}\r\n</style>"
  ],
  "names": [],
  "mappings": "AAcE,mBAAM,CAAE,cAAC,CAAE,mBAAM,CAAC,AAChB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,CAAC,CACT,KAAK,CAAE,IAAI,AACb,CAAC,AACD,gBAAG,CAAC,AACF,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,KAAK,CAAE,IAAI,CACX,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,CACzB,aAAa,CAAE,IAAI,QAAQ,CAAC,IAAI,CAAC,CACjC,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,WAAW,CAAE,YAAY,CACzB,eAAe,CAAE,MAAM,CACvB,UAAU,CAAE,KAAK,CACjB,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CACrC,aAAa,CAAE,MAAM,AACvB,CAAC;ACWD,KAAK,cAAQ,CAAC,AACZ,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,OAAO,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,aAAa,CAAE,GAAG,CAClB,OAAO,CAAE,MAAM,CAAC,KAAK,CACrB,WAAW,CAAE,IAAI,AACnB,CAAC,AACD,OAAO,cAAC,CAAC,AACP,UAAU,CAAE,KAAK,CACjB,SAAS,CAAE,KAAK,CAChB,OAAO,CAAE,CAAC,CACV,OAAO,CAAE,IAAI,CACb,cAAc,CAAE,MAAM,CACtB,eAAe,CAAE,aAAa,CAC9B,aAAa,CAAE,GAAG,CAClB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,CACtB,MAAM,CAAE,KAAK,CACb,UAAU,CAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,AACtE,CAAC,AACD,EAAE,cAAC,CAAC,AACF,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,IAAI,CACd,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,CACZ,UAAU,CAAE,OAAO,CACnB,OAAO,CAAE,KAAK,CACd,MAAM,CAAE,MAAM,CAAC,IAAI,CACnB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,OAAO,AAC3B,CAAC,AACD,EAAE,cAAC,CAAC,AACF,eAAe,CAAE,IAAI,CACrB,OAAO,CAAE,CAAC,AACZ,CAAC,AACD,oBAAM,CAAE,MAAM,cAAC,CAAC,AACd,SAAS,CAAE,KAAK,CAChB,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,KAAK,CACd,aAAa,CAAE,GAAG,AACpB,CAAC,AACD,SAAS,cAAC,CAAC,OAAO,CAAE,KAAK,CAAC,AAC1B,cAAC,CAAE,cAAC,OAAO,CAAE,cAAC,QAAQ,AAAC,CAAC,UAAU,CAAE,UAAU,CAAC;ACtD/C,GAAG,cAAC,CAAC,AACH,OAAO,CAAE,IAAI,CACb,IAAI,CAAE,CAAC,CAAC,CAAC,CAAC,KAAK,CACf,OAAO,CAAE,KAAK,CAAC,CAAC,AAClB,CAAC,AACD,oBAAM,CAAC,AACL,OAAO,CAAE,MAAM,CACf,UAAU,CAAE,OAAO,CACnB,aAAa,CAAE,GAAG,CAAC,KAAK,CAAC,IAAI,AAC/B,CAAC,AACD,mBAAK,CAAE,mBAAK,CAAC,AACX,UAAU,CAAE,MAAM,CAClB,MAAM,CAAE,IAAI,CACZ,KAAK,CAAE,KAAK,AACd,CAAC,AACD,uBAAS,CAAC,AAAC,OAAO,CAAE,KAAK,CAAC"
}